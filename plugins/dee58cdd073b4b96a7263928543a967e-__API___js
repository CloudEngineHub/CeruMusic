/**
 * 由 CeruMusic 插件转换器转换 - @author sqj
 * @name 聚合API接口 (by lerd)
 * @author lerd
 * @version v2.0.0
 * @description 理论可听全平台无损
 */

const pluginInfo = {
  name: "聚合API接口 (by lerd)",
  version: "v2.0.0",
  author: "lerd",
  description: "理论可听全平台无损"
};

// 原始插件代码
const originalPluginCode = "/*!\n * @name 聚合API接口 (by lerd)\n * @description 理论可听全平台无损\n * @version v2.0.0\n * @author lerd\n */\nvar _0xod2 = 'jsjiami.com.v7';\nconst _0x2375d4 = _0x332b;\n\nfunction _0x332b(_0x1a7e99, _0x56212e) {\n    const _0x3e5405 = _0x3e54();\n    return _0x332b = function(_0x332b4b, _0x5de7c7) {\n        _0x332b4b = _0x332b4b - 0x99;\n        let _0x8b95dc = _0x3e5405[_0x332b4b];\n        if (_0x332b['tRowSc'] === undefined) {\n            var _0x16b257 = function(_0xacfc57) {\n                const _0x48a39a = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=';\n                let _0x141f02 = '',\n                    _0x43ba4a = '';\n                for (let _0x386ddc = 0x0, _0x1e3707, _0x502bc7, _0x307a78 = 0x0; _0x502bc7 = _0xacfc57['charAt'](_0x307a78++); ~_0x502bc7 && (_0x1e3707 = _0x386ddc % 0x4 ? _0x1e3707 * 0x40 + _0x502bc7 : _0x502bc7, _0x386ddc++ % 0x4) ? _0x141f02 += String['fromCharCode'](0xff & _0x1e3707 >> (-0x2 * _0x386ddc & 0x6)) : 0x0) {\n                    _0x502bc7 = _0x48a39a['indexOf'](_0x502bc7);\n                }\n                for (let _0x29b5ae = 0x0, _0x3431e8 = _0x141f02['length']; _0x29b5ae < _0x3431e8; _0x29b5ae++) {\n                    _0x43ba4a += '%' + ('00' + _0x141f02['charCodeAt'](_0x29b5ae)['toString'](0x10))['slice'](-0x2);\n                }\n                return decodeURIComponent(_0x43ba4a);\n            };\n            const _0x2cb0ad = function(_0x3d4aa5, _0x1614ac) {\n                let _0x53c089 = [],\n                    _0xf29bb0 = 0x0,\n                    _0x4c7be5, _0x267bb8 = '';\n                _0x3d4aa5 = _0x16b257(_0x3d4aa5);\n                let _0xee68a9;\n                for (_0xee68a9 = 0x0; _0xee68a9 < 0x100; _0xee68a9++) {\n                    _0x53c089[_0xee68a9] = _0xee68a9;\n                }\n                for (_0xee68a9 = 0x0; _0xee68a9 < 0x100; _0xee68a9++) {\n                    _0xf29bb0 = (_0xf29bb0 + _0x53c089[_0xee68a9] + _0x1614ac['charCodeAt'](_0xee68a9 % _0x1614ac['length'])) % 0x100, _0x4c7be5 = _0x53c089[_0xee68a9], _0x53c089[_0xee68a9] = _0x53c089[_0xf29bb0], _0x53c089[_0xf29bb0] = _0x4c7be5;\n                }\n                _0xee68a9 = 0x0, _0xf29bb0 = 0x0;\n                for (let _0x10de97 = 0x0; _0x10de97 < _0x3d4aa5['length']; _0x10de97++) {\n                    _0xee68a9 = (_0xee68a9 + 0x1) % 0x100, _0xf29bb0 = (_0xf29bb0 + _0x53c089[_0xee68a9]) % 0x100, _0x4c7be5 = _0x53c089[_0xee68a9], _0x53c089[_0xee68a9] = _0x53c089[_0xf29bb0], _0x53c089[_0xf29bb0] = _0x4c7be5, _0x267bb8 += String['fromCharCode'](_0x3d4aa5['charCodeAt'](_0x10de97) ^ _0x53c089[(_0x53c089[_0xee68a9] + _0x53c089[_0xf29bb0]) % 0x100]);\n                }\n                return _0x267bb8;\n            };\n            _0x332b['FKfPGk'] = _0x2cb0ad, _0x1a7e99 = arguments, _0x332b['tRowSc'] = !![];\n        }\n        const _0x2ee30b = _0x3e5405[0x0],\n            _0x4c3704 = _0x332b4b + _0x2ee30b,\n            _0x5c20ff = _0x1a7e99[_0x4c3704];\n        return !_0x5c20ff ? (_0x332b['tkWaPe'] === undefined && (_0x332b['tkWaPe'] = !![]), _0x8b95dc = _0x332b['FKfPGk'](_0x8b95dc, _0x5de7c7), _0x1a7e99[_0x4c3704] = _0x8b95dc) : _0x8b95dc = _0x5c20ff, _0x8b95dc;\n    }, _0x332b(_0x1a7e99, _0x56212e);\n}(function(_0x31e252, _0x31ec74, _0x501ac3, _0x475b9f, _0x230a89, _0x41e081, _0x32f175) {\n    return _0x31e252 = _0x31e252 >> 0x6, _0x41e081 = 'hs', _0x32f175 = 'hs',\n        function(_0x599cb1, _0x3eee44, _0x2c12af, _0x5a4750, _0x27ab7a) {\n            const _0x34367f = _0x332b;\n            _0x5a4750 = 'tfi', _0x41e081 = _0x5a4750 + _0x41e081, _0x27ab7a = 'up', _0x32f175 += _0x27ab7a, _0x41e081 = _0x2c12af(_0x41e081), _0x32f175 = _0x2c12af(_0x32f175), _0x2c12af = 0x0;\n            const _0x554200 = _0x599cb1();\n            while (!![] && --_0x475b9f + _0x3eee44) {\n                try {\n                    _0x5a4750 = -parseInt(_0x34367f(0xc3, 'OjpG')) / 0x1 * (-parseInt(_0x34367f(0xf1, 'AXG[')) / 0x2) + -parseInt(_0x34367f(0xac, 'OjpG')) / 0x3 + -parseInt(_0x34367f(0xa9, 'rxWY')) / 0x4 + -parseInt(_0x34367f(0xdb, 'DZ)e')) / 0x5 + parseInt(_0x34367f(0x100, 'Hko$')) / 0x6 + -parseInt(_0x34367f(0xbd, '8ENj')) / 0x7 * (parseInt(_0x34367f(0xd4, '#2e$')) / 0x8) + -parseInt(_0x34367f(0x106, '#2e$')) / 0x9;\n                } catch (_0xf6ef14) {\n                    _0x5a4750 = _0x2c12af;\n                } finally {\n                    _0x27ab7a = _0x554200[_0x41e081]();\n                    if (_0x31e252 <= _0x475b9f) _0x2c12af ? _0x230a89 ? _0x5a4750 = _0x27ab7a : _0x230a89 = _0x27ab7a : _0x2c12af = _0x27ab7a;\n                    else {\n                        if (_0x2c12af == _0x230a89['replace'](/[SGphFLxfDJEQuPdRAqNBT=]/g, '')) {\n                            if (_0x5a4750 === _0x3eee44) {\n                                _0x554200['un' + _0x41e081](_0x27ab7a);\n                                break;\n                            }\n                            _0x554200[_0x32f175](_0x27ab7a);\n                        }\n                    }\n                }\n            }\n        }(_0x501ac3, _0x31ec74, function(_0x1f8387, _0x436be4, _0x39ff61, _0x29c458, _0x3cee82, _0x5cce1a, _0x2bed0e) {\n            return _0x436be4 = 'split', _0x1f8387 = arguments[0x0], _0x1f8387 = _0x1f8387[_0x436be4](''), _0x39ff61 = 'reverse', _0x1f8387 = _0x1f8387[_0x39ff61]('v'), _0x29c458 = 'join', (0x17e782, _0x1f8387[_0x29c458](''));\n        });\n}(0x2f40, 0xac1e3, _0x3e54, 0xbf), _0x3e54) && (_0xod2 = 0x1ba1);\nconst DEV_ENABLE = ![],\n    MUSIC_QUALITY = {\n        'tx': ['128k', '320k', _0x2375d4(0xe8, 'EfBr'), _0x2375d4(0xf4, 'OjpG')],\n        'wy': [_0x2375d4(0x103, 'AXG['), _0x2375d4(0xfd, '5xm9'), 'flac', _0x2375d4(0xdf, 'rwK1')],\n        'kg': [_0x2375d4(0xde, 'Hko$'), _0x2375d4(0xcd, 'nQ!]'), _0x2375d4(0xfa, '1L(9'), _0x2375d4(0xe9, 'B)(O')],\n        'kw': ['128k', _0x2375d4(0xc8, ')av0'), _0x2375d4(0xba, 'V6Gi')],\n        'mg': ['320k', _0x2375d4(0xa8, '7CUv')]\n    },\n    MUSIC_SOURCE = Object[_0x2375d4(0xef, '9Sh@')](MUSIC_QUALITY),\n    {\n        EVENT_NAMES, request, on, send, utils, env, version, currentScriptInfo\n    } = globalThis['lx'],\n    httpFetch = (_0x569402, _0x3d5730 = {\n        'method': _0x2375d4(0x99, 'PSAy')\n    }) => {\n        const _0x32bbdb = {\n            'lwGTR': function(_0x6dc667, _0x2ab009) {\n                return _0x6dc667(_0x2ab009);\n            },\n            'txHMW': function(_0x350d3d, _0x348ae7, _0x3c83ae, _0x1b72b2) {\n                return _0x350d3d(_0x348ae7, _0x3c83ae, _0x1b72b2);\n            }\n        };\n        return new Promise((_0x173a9f, _0x29fcdb) => {\n            const _0x25a897 = _0x332b,\n                _0x1c6f47 = {\n                    'HmTiP': function(_0x56a99c, _0x156ffe) {\n                        return _0x32bbdb['lwGTR'](_0x56a99c, _0x156ffe);\n                    }\n                };\n            _0x32bbdb[_0x25a897(0xcb, 'ccNn')](request, _0x569402, _0x3d5730, (_0xa129ff, _0x5c45fb) => {\n                const _0x4bec35 = _0x25a897;\n                if (_0xa129ff) return _0x29fcdb(_0xa129ff);\n                _0x1c6f47[_0x4bec35(0xf3, '#2e$')](_0x173a9f, _0x5c45fb);\n            });\n        });\n    },\n    handleGetMusicUrl = async(_0x42f452, _0x4d19d6, _0x51b3b3) => {\n        const _0x1a9c83 = _0x2375d4,\n            _0x162c2c = {\n                'OtUrB': function(_0x13b862, _0x53c1c3) {\n                    return _0x13b862(_0x53c1c3);\n                },\n                'WhsYP': function(_0x5d3fee, _0x11e5c4) {\n                    return _0x5d3fee != _0x11e5c4;\n                },\n                'PAYtV': function(_0x378b3a, _0x4a6117) {\n                    return _0x378b3a(_0x4a6117);\n                },\n                'hhdcH': 'get url error',\n                'ICmDG': function(_0x303747, _0x1d12a1) {\n                    return _0x303747 == _0x1d12a1;\n                },\n                'JbwVc': 'standard',\n                'ZLHiQ': _0x1a9c83(0xb1, '$4zZ'),\n                'EKcoC': _0x1a9c83(0xaf, 'rwK1'),\n                'YjOHQ': _0x1a9c83(0xe6, 'Hko$'),\n                'mpHRK': function(_0x31a6e3, _0x39a520, _0x24aa1a) {\n                    return _0x31a6e3(_0x39a520, _0x24aa1a);\n                },\n                'czkjX': function(_0x229847, _0x3ed4b5) {\n                    return _0x229847(_0x3ed4b5);\n                },\n                'dDScf': _0x1a9c83(0xf0, 'bUaV'),\n                'ZLYhE': function(_0x2db930, _0x1c4ab3) {\n                    return _0x2db930(_0x1c4ab3);\n                },\n                'PqjDo': _0x1a9c83(0x102, 'nI^u')\n            };\n        if (_0x42f452 == 'tx') {\n            const _0x1bb250 = {\n                    '128k': '7',\n                    '320k': '9',\n                    'flac': '11',\n                    'flac24bit': '14'\n                },\n                _0x159557 = _0x1a9c83(0xd8, 'OjpG') + _0x4d19d6[_0x1a9c83(0xb6, 'rwK1')] + _0x1a9c83(0xa3, '$4zZ') + _0x1bb250[_0x51b3b3],\n                _0x5c45cb = await httpFetch(_0x159557, {\n                    'method': 'GET'\n                }),\n                {\n                    body: _0x460b4d\n                } = _0x5c45cb;\n            if (!_0x460b4d || _0x162c2c[_0x1a9c83(0xf5, 'AXG[')](isNaN, Number(_0x460b4d[_0x1a9c83(0xfc, 't)R1')])) || _0x162c2c[_0x1a9c83(0xa6, 'B)(O')](_0x162c2c[_0x1a9c83(0xe4, '92RF')](Number, _0x460b4d[_0x1a9c83(0xb8, 'Hko$')]), 0x0)) throw new Error(_0x162c2c['hhdcH']);\n            return _0x460b4d[_0x1a9c83(0xb5, 'wIiY')][_0x1a9c83(0xe2, '#TxF')];\n        } else {\n            if (_0x162c2c[_0x1a9c83(0xfb, '8SsA')](_0x42f452, 'wy')) {\n                const _0x306da6 = {\n                        '128k': _0x162c2c['JbwVc'],\n                        '320k': _0x162c2c[_0x1a9c83(0xda, 'nI^u')],\n                        'flac': _0x162c2c[_0x1a9c83(0xe1, '7rx!')],\n                        'flac24bit': _0x162c2c[_0x1a9c83(0xb4, '1L(9')]\n                    },\n                    _0xdeb2a9 = _0x1a9c83(0xff, 'nQ!]') + _0x4d19d6['songmid'] + _0x1a9c83(0xd0, 'rwK1') + _0x306da6[_0x51b3b3],\n                    _0x7a48cc = await _0x162c2c['mpHRK'](httpFetch, _0xdeb2a9, {\n                        'method': _0x1a9c83(0x105, 'JrFm')\n                    }),\n                    {\n                        body: _0x3ce470\n                    } = _0x7a48cc;\n                if (!_0x3ce470 || _0x162c2c[_0x1a9c83(0xd9, 'ccNn')](isNaN, Number(_0x3ce470[_0x1a9c83(0x9c, 'TtRP')])) || Number(_0x3ce470[_0x1a9c83(0xe0, '9Sh@')]) != 0xc8) throw new Error(_0x1a9c83(0xed, '8SsA'));\n                return _0x3ce470[_0x1a9c83(0xd6, 'EfBr')][_0x1a9c83(0xcc, '$0oq')];\n            } else {\n                if (_0x42f452 == 'kg') {\n                    const _0x3854f7 = {\n                            '128k': _0x162c2c['dDScf'],\n                            '320k': _0x1a9c83(0xa5, 'Ra%p'),\n                            'flac': _0x1a9c83(0xa8, '7CUv'),\n                            'flac24bit': _0x1a9c83(0xbb, 'PSAy')\n                        },\n                        _0x351ef1 = _0x1a9c83(0x9f, '1&KV') + _0x4d19d6[_0x1a9c83(0x104, 'YS]1')] + _0x1a9c83(0xf9, 'AXG[') + _0x3854f7[_0x51b3b3],\n                        _0x25a238 = await httpFetch(_0x351ef1, {\n                            'method': 'GET'\n                        }),\n                        {\n                            body: _0x565f80\n                        } = _0x25a238;\n                    if (!_0x565f80 || _0x162c2c[_0x1a9c83(0xdd, ')av0')](isNaN, _0x162c2c[_0x1a9c83(0xae, '7CUv')](Number, _0x565f80[_0x1a9c83(0xc1, '8SsA')])) || _0x162c2c[_0x1a9c83(0xc5, '9Sh@')](Number, _0x565f80[_0x1a9c83(0xdc, '$0oq')]) != 0xc8) throw new Error(_0x1a9c83(0xa0, 't)R1'));\n                    return _0x565f80[_0x1a9c83(0xf6, 'T@V4')];\n                } else {\n                    if (_0x162c2c[_0x1a9c83(0xe3, '8ENj')](_0x42f452, 'kw')) {\n                        const _0x2467b5 = {\n                                '128k': _0x1a9c83(0x9a, 'TtRP'),\n                                '320k': _0x162c2c[_0x1a9c83(0xf2, '92RF')],\n                                'flac': _0x162c2c['EKcoC']\n                            },\n                            _0x220d53 = _0x1a9c83(0xb9, '8SsA') + _0x4d19d6[_0x1a9c83(0xa4, '9Sh@')] + _0x1a9c83(0xee, 'JrFm') + _0x2467b5[_0x51b3b3],\n                            _0x3b7912 = await httpFetch(_0x220d53, {\n                                'method': _0x162c2c[_0x1a9c83(0xcf, '1&KV')]\n                            }),\n                            {\n                                body: _0x5ab28e\n                            } = _0x3b7912;\n                        if (!_0x5ab28e || _0x162c2c[_0x1a9c83(0xea, '92RF')](isNaN, _0x162c2c[_0x1a9c83(0xad, '5xm9')](Number, _0x5ab28e[_0x1a9c83(0xe7, 'fxV0')])) || Number(_0x5ab28e[_0x1a9c83(0xb0, 's0VR')]) != 0xc8) throw new Error(_0x162c2c[_0x1a9c83(0xeb, 'nI^u')]);\n                        return _0x5ab28e[_0x1a9c83(0xbc, 'Ra%p')][_0x1a9c83(0xd2, 'CcZq')];\n                    } else {\n                        if (_0x42f452 == 'mg') {\n                            const _0x5a1b31 = {\n                                    '320k': '2',\n                                    'flac': '1'\n                                },\n                                _0x34fbde = 'https://www.hhlqilongzhu.cn/api/dg_mgmusic_24bit.php?msg=' + msg + _0x1a9c83(0xa2, 'Qcnx') + _0x5a1b31[_0x51b3b3],\n                                _0x326054 = await httpFetch(_0x34fbde, {\n                                    'method': 'GET'\n                                }),\n                                {\n                                    body: _0x3571e6\n                                } = _0x326054;\n                            if (!_0x3571e6 || isNaN(Number(_0x3571e6['code'])) || Number(_0x3571e6[_0x1a9c83(0xd7, 'PSAy')]) != 0xc8) throw new Error(_0x1a9c83(0xf7, 'EfBr'));\n                            return _0x3571e6['music_url'];\n                        }\n                    }\n                }\n            }\n        }\n    },\n    musicSources = {};\nMUSIC_SOURCE['forEach'](_0x238e3a => {\n    const _0x4707e2 = _0x2375d4,\n        _0x45a375 = {\n            'rpXjg': _0x4707e2(0xc6, 'nQ!]'),\n            'RalDw': _0x4707e2(0xb3, 'AXG['),\n            'CwdUH': _0x4707e2(0xd5, '$4zZ'),\n            'eszRO': function(_0xa1e746, _0x5a53c4) {\n                return _0xa1e746 == _0x5a53c4;\n            }\n        };\n    musicSources[_0x238e3a] = {\n        'name': _0x238e3a,\n        'type': _0x45a375[_0x4707e2(0xd1, 'PSAy')],\n        'actions': _0x238e3a == _0x45a375[_0x4707e2(0x9b, 't)R1')] ? [] : [_0x45a375[_0x4707e2(0xc9, '8ENj')]],\n        'qualitys': _0x45a375[_0x4707e2(0xc0, '#2e$')](_0x238e3a, _0x45a375[_0x4707e2(0xb2, 'Qcnx')]) ? [] : MUSIC_QUALITY[_0x238e3a]\n    };\n}), on(EVENT_NAMES[_0x2375d4(0xf8, 'fxV0')], ({\n                                                  action: _0x1581a9,\n                                                  source: _0x3c5ae4,\n                                                  info: _0x17eeb1\n                                              }) => {\n    const _0x192f1e = _0x2375d4,\n        _0x42ed7b = {\n            'WFJdH': _0x192f1e(0x101, '5xm9'),\n            'GMfru': function(_0x120e2c, _0x50126f, _0x4befe1, _0x3e262f) {\n                return _0x120e2c(_0x50126f, _0x4befe1, _0x3e262f);\n            }\n        };\n    switch (_0x1581a9) {\n        case _0x42ed7b[_0x192f1e(0x9e, '1L(9')]:\n            return _0x42ed7b[_0x192f1e(0xc2, 'zDR%')](handleGetMusicUrl, _0x3c5ae4, _0x17eeb1['musicInfo'], _0x17eeb1[_0x192f1e(0xce, '1&KV')])['then'](_0x136577 => Promise[_0x192f1e(0xab, '1O6f')](_0x136577))['catch'](_0x591312 => Promise[_0x192f1e(0xb7, 'TtRP')](_0x591312));\n        default:\n            return Promise['reject'](_0x192f1e(0xbe, '8SsA'));\n    }\n});\n\nfunction _0x3e54() {\n    const _0x1424ce = (function() {\n        return [_0xod2, 'QjqRsJjiPafmRihTB.GhDcuoSmxEp.vL7SASAFNd==', 'W6XiErGmowhdJmoeoCkmWQVcUSkEW6ddMSoT', 'z8kNkMO', 'C33cTq', 'hf5IWPJcHsDNW6/cTWmw', 'umkfW7mdW7i', 'AmkMx8o8WOa', 'drfUzCoyng/dSSo7', 'yHOdW5JdSq', 'WOOSymkwe8kKW7JdP8oM', 't0iwlSoXjmkSWQeQWOuDwq', 'qKvSW78Ubx8', 'cX8JW4VdNWf9W6pdQa', 'vJZdRvm', 'd8k+fe5j', 'rc0QqW', 'WQVdU8o8qq', 'BKNcUgHpW5O', 'dd9GWPhdRNWEW5VdIJv4W6VdIJSpzCkcymoJd8kZdmocW5ldSCkroSoyaa/cKmkhWR93WRlcVSo0W6zuyHTyWOBdT8k1h8oeFvFdLqxdRxu', 'WP7dU3qoWOZdV1BdPGNdPSkwWPyc', 'W7xcVmk/q8ksWPJdPCoF', 'WRJcU8k3', 'hfXUW4e', 'Bmo0FSkK', 'WO15va', 'eSo5omkJW6xdTt88W6zsyW', 'Ft8+', 'A3ymnbDuWRFcHq', 'DsmIyK0', 'E20jpW', 'q8oSvZlcOCk2w8oMWRmWzty', 'zXBdHLtcUa', 'WPRcPSoGWOacWQZcTIevsIXMW6/cIKK9lSoMWQaSqaBdUmkEWO84WQW2WPS5WPxcT2JdUCkst8kkqgKbl1KexLpcI1VdU8oGycFdLX4OvSkImmk0W551W7VcVG', 'qcC6bK8nEWpcOmoJmuZdGq', 'W7yLeKtcJdpdUItcH8kfWOy', 'xmkpdYDlWPfBmw54WOqzWPDRkmoUwSkv', 'l01voW'].concat((function() {\n            return ['F8kTpx58zeW', 'D8orWPW', 'c8omW4WzWQu', 'WO43ESklfCkF', 'gmooWPqA', 'W67dMmk6qCkbWQ/dLmkfyCkntmkGca', 'aMhcU3VcKZfscH0', 'W6SGcaq2u0W', 'wK45nSoDmZNdL8oyl0j7W4C', 'W4JcImkvxSkN', 'jmoUWQWrfa', 'W5SpsCoyAmoRsvK', 'W4evW5tdIW', 'BfDpB2eM', 'kmkaxLiA', 'qqe1W4VdNW', 'AtRdG3JcOq', 'W4mVfIW', 'W4qpvmomACoNxG', 'AMChpXbb', 'W4VcPczD', 'lSkjdxP9l8k0WQRdTIHwc8kBk8kFimoZWPOxFSonW5JdG8kqWOJdJsXSsqBdQSoFW74ZWPPIWPZcQSkm', 'yuVcSh8', 'uHmnvG', 'imkcW5Hy', 'bSogW7rJFr9p', 'j8kEdwnHE8k7W6VdUcWFvSknpSkbkmo0WOC', 'yCkXWRRdUJ3dNaZcTWxdNgmtW6S', 'rCk4CCohWP8', 'jCkshw8', 'W6/cO8oMW6FdMq', 'wuW4tCkjC3RdLmo+', 'omo5WO9EWPCpmL0sW7KPW7xcRa', 'q8k2bMTt', 'ct5NWOJdVG', 'cb5oDSkRnmohWPyxWQm0', 'W5pcT8ksWOO', 'CSoJW7HdvG'].concat((function() {\n                return ['6icX5zg1tLBcO+AoPEwpRSk7WQCbsJJdSI/cJ1WB', 'W4RcSHldHGe', 'WRjNsG', 'v3KKWOO', 'WOBcQ8oKWPu', 'WQlcO8o+WRqE', 'WPeuq8oByCkZufNcJIjXA8kzfZpcK8kN', 'saOYvmoS', 'cWZcJW', 'Dr3dPuRcMWZcKa', 'eSo7p8kHW6tcOuyVW5nbzMVcJa', 'zfPuB2uBA8kX', 'xK0jiq', 'wruowW', 'aWL7DSkzoIlcTmoUe1O2W6yJWPnFsmobamogWRJdTxfsW7JdLmkJu8kWySomdCklWRuRFY91w8oEW7pcRrW1WQ/cH8oKW7Deg8kAg8kPxmkCW6e', 'W53cSdhdOq4', 'WQxcSSkRWQtdUW', 'yCkZWRZdUt7dNfVcRr3dRNWY', 'WQr6qHm', 'WRddHmo7WPug', 'WPNdUxPt', 'W5emw8oinSk6wepcLq', 'B8kTn3W', 'WOeShrdcTW', 'WO0JWP8', 'EmoxW7fswq', 'wSkiW6iEW7u', 'WQzzCGW', 'W4dcOJbDW4S', 'u095W68', 'xeaCiW', 'oSoiW54JW4DqcGpcIW', 'rCk9W64yW6e', 'WPFcLSkhWQ7dOG', 'W4ZcGmoFqwjvW4LyW67cVeNdSCkh', 'iCkydsP7z8o3WQxdSIPnsSkk'];\n            }()));\n        }()));\n    }());\n    _0x3e54 = function() {\n        return _0x1424ce;\n    };\n    return _0x3e54();\n};\nconst scriptInfo = globalThis.lx.currentScriptInfo;\n\nif (\n    scriptInfo.name !== \"聚合API接口 (by lerd)\" ||\n    scriptInfo.description !== \"理论可听全平台无损\" ||\n    scriptInfo.version !== \"v2.0.0\" ||\n    scriptInfo.author !== \"lerd\"\n) {\n    throw new Error(\"初始化失败！将音源 名字、描述、版本号、作者和主页回正，以初始化成功\");\n}\n\nsend(EVENT_NAMES.inited, { status: true, openDevTools: DEV_ENABLE, sources: musicSources })";

// 音源信息将通过插件的 send 调用动态获取
let sources = {};

function getSourceName(sourceId) {
  const nameMap = {
    'kw': '酷我音乐',
    'kg': '酷狗音乐', 
    'tx': 'QQ音乐',
    'wy': '网易云音乐',
    'mg': '咪咕音乐'
  };
  return nameMap[sourceId] || sourceId.toUpperCase() + '音乐';
}

// 提取默认音源配置作为备用
function extractDefaultSources() {
  // 尝试从 MUSIC_QUALITY 常量中提取音源信息
  const qualityMatch = originalPluginCode.match(/const\s+MUSIC_QUALITY\s*=\s*JSON\.parse\(([^)]+)\)/);
  if (qualityMatch) {
    try {
      // 处理字符串，移除外层引号并正确解析
      let qualityStr = qualityMatch[1].trim();
      if (qualityStr.startsWith("'") && qualityStr.endsWith("'")) {
        qualityStr = qualityStr.slice(1, -1);
      } else if (qualityStr.startsWith('"') && qualityStr.endsWith('"')) {
        qualityStr = qualityStr.slice(1, -1);
      }
      
      console.log('提取到的 MUSIC_QUALITY 字符串:', qualityStr);
      const qualityData = JSON.parse(qualityStr);
      console.log('解析后的 MUSIC_QUALITY 数据:', qualityData);
      
      const extractedSources = {};
      Object.keys(qualityData).forEach(sourceId => {
        extractedSources[sourceId] = {
          name: getSourceName(sourceId),
          type: 'music',
          qualitys: qualityData[sourceId] || ['128k', '320k']
        };
      });
      
      console.log('提取的音源配置:', extractedSources);
      return extractedSources;
    } catch (e) {
      console.log('解析 MUSIC_QUALITY 失败:', e.message);
    }
  }
  
  // 默认音源配置
  return {
    kw: { name: "酷我音乐", type: "music", qualitys: ['128k', '320k', 'flac', 'flac24bit', 'hires', 'atmos', 'master'] },
    kg: { name: "酷狗音乐", type: "music", qualitys: ['128k', '320k', 'flac', 'flac24bit', 'hires', 'atmos', 'master'] },
    tx: { name: "QQ音乐", type: "music", qualitys: ['128k', '320k', 'flac', 'flac24bit', 'hires', 'atmos', 'master'] },
    wy: { name: "网易云音乐", type: "music", qualitys: ['128k', '320k', 'flac', 'flac24bit', 'hires', 'atmos', 'master'] },
    mg: { name: "咪咕音乐", type: "music", qualitys: ['128k', '320k', 'flac', 'flac24bit', 'hires', 'atmos', 'master'] }
  };
}



// 初始化默认音源
sources = extractDefaultSources();

// 插件状态
let isInitialized = false;
let pluginSources = {};
let requestHandler = null;
initializePlugin()
function initializePlugin() {
  if (isInitialized) return;
  
  const { request, utils } = cerumusic;
  
  // 创建完整的 lx 模拟环境
  const mockLx = {
    EVENT_NAMES: {
      request: 'request',
      inited: 'inited',
      updateAlert: 'updateAlert'
    },
    on: (event, handler) => {
      console.log(`[聚合API接口 (by lerd) by Ceru插件] 注册事件监听器: ${event}`);
      if (event === 'request') {
        requestHandler = handler;
      }
    },
    send: (event, data) => {
      console.log(`[聚合API接口 (by lerd) by Ceru插件] 发送事件: ${event}`, data);
      if (event === 'inited' && data.sources) {
        // 动态更新音源信息，保持原始的音质配置
        pluginSources = data.sources;
        
        // 将插件发送的音源信息转换为正确格式并同步到导出的 sources
        Object.keys(pluginSources).forEach(sourceId => {
          const sourceInfo = pluginSources[sourceId];
          
          // 保留原始音质配置，如果存在的话
          const originalQualitys = sources[sourceId] && sources[sourceId].qualitys;
          
          sources[sourceId] = {
            name: getSourceName(sourceId),
            type: sourceInfo.type || 'music',
            // 优先使用插件发送的音质配置，其次使用原始解析的配置，最后使用默认配置
            qualitys: sourceInfo.qualitys || originalQualitys || ['128k', '320k']
          };
        });
        
        console.log('[聚合API接口 (by lerd) by Ceru插件] 音源注册完成:', Object.keys(pluginSources));
        console.log('[聚合API接口 (by lerd) by Ceru插件] 动态音源信息已更新:', sources);
      }
    },
    request: request,
    utils: {
      buffer: utils.buffer,
      crypto: {
        aesEncrypt: (data, mode, key, iv) => {
          // 简化的 AES 加密实现
          try {
            return utils.crypto ? utils.crypto.aesEncrypt(data, mode, key, iv) : data;
          } catch (e) {
            return data;
          }
        },
        md5: (str) => {
          try {
            return utils.crypto ? utils.crypto.md5(str) : str;
          } catch (e) {
            return str;
          }
        },
        randomBytes: (size) => {
          try {
            return utils.crypto ? utils.crypto.randomBytes(size) : Buffer.alloc(size);
          } catch (e) {
            return Buffer.alloc(size);
          }
        },
        rsaEncrypt: (data, key) => {
          try {
            return utils.crypto ? utils.crypto.rsaEncrypt(data, key) : data;
          } catch (e) {
            return data;
          }
        }
      }
    },
    version: '1.0.0',
    currentScriptInfo: {
      rawScript: originalPluginCode,
      name: '聚合API接口 (by lerd)',
      version: 'v2.0.0',
      author: 'lerd',
      description: '理论可听全平台无损'
    },
    env: 'nodejs' // 添加环境信息
  };
  
  // 创建全局环境
  const globalThis = {
    lx: mockLx
  };
  
  // 创建沙箱环境
  const sandbox = {
    globalThis: globalThis,
    lx: mockLx,
    console: console,
    setTimeout: setTimeout,
    clearTimeout: clearTimeout,
    setInterval: setInterval,
    clearInterval: clearInterval,
    Buffer: Buffer,
    JSON: JSON,
    require: () => ({}),
    module: { exports: {} },
    exports: {},
    process: { env: { NODE_ENV: 'production' } }
  };
  
  try {
    // 使用 Function 构造器执行插件代码
    const pluginFunction = new Function(
      'globalThis', 'lx', 'console', 'setTimeout', 'clearTimeout', 
      'setInterval', 'clearInterval', 'Buffer', 'JSON', 'require', 
      'module', 'exports', 'process',
      originalPluginCode
    );
    
    pluginFunction(
      globalThis, mockLx, console, setTimeout, clearTimeout,
      setInterval, clearInterval, Buffer, JSON, () => ({}),
      { exports: {} }, {}, { env: { NODE_ENV: 'production' } }
    );
    
    isInitialized = true;
    console.log(`[CeruMusic] 事件驱动插件初始化成功`);
  } catch (error) {
    console.log(`[CeruMusic] 插件初始化完成: ${error.message}`);
    isInitialized = true;
  }
}



async function musicUrl(source, musicInfo, quality) {
  // 确保插件已初始化
  initializePlugin();
  
  // 等待一小段时间让插件完全初始化
  await new Promise(resolve => setTimeout(resolve, 100));
  
  if (!requestHandler) {
    const errorMessage = '插件请求处理器未初始化';
    console.error(`[${pluginInfo.name}] Error: ${errorMessage}`);
    throw new Error(errorMessage);
  }
  
  console.log(`[${pluginInfo.name}] 使用事件驱动方式获取 ${source} 音源链接`);
  
  try {
    // 调用插件的请求处理器
    const result = await requestHandler({
      source: source,
      action: 'musicUrl',
      info: {
        musicInfo: musicInfo,
        type: quality
      }
    });
    
    // 检查结果是否有效
    if (!result) {
      const errorMessage = `获取 ${source} 音源链接失败: 返回结果为空`;
      console.error(`[${pluginInfo.name}] Error: ${errorMessage}`);
      throw new Error(errorMessage);
    }
    
    // 如果结果是对象且包含错误信息
    if (typeof result === 'object' && result.error) {
      const errorMessage = result.error || `获取 ${source} 音源链接失败`;
      console.error(`[${pluginInfo.name}] Error: ${errorMessage}`);
      throw new Error(errorMessage);
    }
    
    // 如果结果是对象且包含状态码
    if (typeof result === 'object' && result.code && result.code !== 200) {
      const errorMessage = result.msg || `接口错误 (Code: ${result.code})`;
      console.error(`[${pluginInfo.name}] Error: ${errorMessage}`);
      throw new Error(errorMessage);
    }
    
    console.log(`[${pluginInfo.name}] Got URL: ${typeof result === 'string' ? result : result.url || result}`);
    return result;
  } catch (error) {
    // 确保错误信息格式与 example-plugin.js 一致
    const errorMessage = error.message || `获取 ${source} 音源链接时发生未知错误`;
    console.error(`[${pluginInfo.name}] Error: ${errorMessage}`);
    throw new Error(errorMessage);
  }
}

module.exports = {
  pluginInfo,
  sources,
  musicUrl
};